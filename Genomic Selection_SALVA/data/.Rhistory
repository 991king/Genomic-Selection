ggtitle("Mundo", subtitle = "Guisante Verde")
ggplot(world_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*150), stat="identity", size=.01, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./150, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Mundo", subtitle = "Guisante Verde")
library(ggplot2)
library(dplyr)
library(patchwork) # To display 2 charts together
library(hrbrthemes)
ggplot(spain_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*100), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./100, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("España", subtitle = "Guisante Seco")
ggplot(europe_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*2000), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./2000, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Seco")
ggplot(spain_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*50), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./50, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("España", subtitle = "Guisante Seco")
ggplot(spain_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*70), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./70, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("España", subtitle = "Guisante Seco")
ggplot(spain_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*60), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./60, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("España", subtitle = "Guisante Seco")
ggplot(europe_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*2000), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./2000, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Seco")
ggplot(world_pea_dry, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*3000), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./3000, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Mundo", subtitle = "Guisante Seco")
ggplot(spain_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./1, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("España", subtitle = "Guisante Verde")
ggplot(europe_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*35), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./35, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Verde")
ggplot(europe_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*50), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./50, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Verde")
ggplot(europe_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*20), stat="identity", size=.1, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./20, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Europa", subtitle = "Guisante Verde")
ggplot(world_pea_green, aes(x=Año)) +
geom_line( aes(y= Superficie_ha), size=1.2, color=SuperficieColor) +
geom_bar( aes(y=Rendimiento_kg.ha*150), stat="identity", size=.01, fill=RendimientoColor, color="black", alpha=.4)+
scale_x_continuous(breaks=seq(1961,2019,5)) +
scale_y_continuous(
name = "Superficie (ha)",
sec.axis = sec_axis(~./150, name="Rendimiento (kg/ha)")
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = SuperficieColor, size=13),
axis.title.y.right = element_text(color = RendimientoColor, size=13)
) +
ggtitle("Mundo", subtitle = "Guisante Verde")
load("C:/Users/Salva/Desktop/DOCTORADO NUBE/Producción científica/artículo Ann. App. Bio_2021/analisis de datos/analysis data master/Environment.RData")
library(agricolae)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
citation()
load("C:/Users/Salva/Desktop/DOCTORADO NUBE/Producción científica/artículo Ann. App. Bio_2021/analisis de datos/analysis data master/env_23-09-21.RData")
##Activarlos
{
library(agricolae)
library(ggridges)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
library(opticskxi)
library(pvclust)
library(ggbiplot)
library(ggbiplot)
library(tidyr)
library(factoextra)
}
pca.colones
ggbiplot
ggbiplot(gen.colonies,ellipse=TRUE,  labels=rownames(colonies), groups=Selection)
{
library(agricolae)
library(ggridges)
library(MASS)
library(nlme)
library(lme4)
library(klaR)
library(cluster)
library(AlgDesign)
library(metan)
library(stats)
library(readxl)
library(Rcpp)
library(remotes)
library(tidyverse)
library(ggpubr)
library(ggstatsplot)
library(rstatix) # pruebas P/NP y estadÃ­sticos con tuberÃ­as.
library(DescTools) # prueba robusta de Yuen
library(WRS2)
library(ggplot2)
library(ggcorrplot)
library(opticskxi)
library(pvclust)
library(ggbiplot)
library(ggbiplot)
library(tidyr)
library(factoextra)
}
library(readxl)
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
View(R_prevariedades_parcelitas_2021)
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
rawdata <- as.data.frame(R_prevariedades_parcelitas_2021)
mixed_mod <-
gamem_met(rawdata,
env = ENV,
gen = GEN,
rep = REP,
resp = c(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, Oc/pl, BIOM, YIELD),
verbose = T,
random = "gen")
R_prevariedades_parcelitas_2021 <- read_excel("C:/Users/Salva/Desktop/DOCTORADO NUBE/PROGRAMA DE MEJORA/Mejora guisante Jopo/R_prevariedades parcelitas 2021.xlsx")
rawdata <- as.data.frame(R_prevariedades_parcelitas_2021)
mixed_mod <-
gamem_met(rawdata,
env = ENV,
gen = GEN,
rep = REP,
resp = c(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
verbose = T,
random = "gen")
stat_vars <-
data_ge2 %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
stat_vars <-
rawdata %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
gge_model <- gge(rawdata, ENV, GEN, YIELD)
stat_vars <-
rawdata %>%
desc_stat(Germ, DtF, DtM, Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD,
hist = TRUE)
a <- plot(gge_model)
b <- plot(gge_model,
col.gen = "orange",
size.text.env = 2,
plot_theme = theme_metan(grid =  "both"))
arrange_ggplot(a, b, tag_levels = "a")
gge_model2 <- gge(rawdata, ENV, GEN, GY, svp = "GEN")
gge_model2 <- gge(rawdata, ENV, GEN, YIELD, svp = "GEN")
gge_model2 <- gge(rawdata, ENV, GEN, YIELD, svp = "genotype")
c <- plot(gge_model2, type = 2)
d <- plot(gge_model2,
type = 2,
col.gen = "black",
col.env = "red",
axis_expand = 1.5,
plot_theme = theme_metan_minimal())
arrange_ggplot(c, d, tag_levels = list(c("c", "d")))
o <- plot(gge_model, type = 8)
p <- plot(gge_model,
type = 8,
col.gen = "black",
col.env = "gray",
size.text.gen = 6,
plot_theme = theme_metan_minimal())
arrange_ggplot(o, p, tag_levels = list(c("o", "p")))
o <- plot(gge_model2, type = 8)
p <- plot(gge_model2,
type = 8,
col.gen = "black",
col.env = "gray",
size.text.gen = 6,
plot_theme = theme_metan_minimal())
arrange_ggplot(o, p, tag_levels = list(c("o", "p")))
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 65) %>% # Default is 50
mtsi(SI = 20)
plot(MTSI_index2)
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 65) %>% # Default is 50
mtsi(SI = 15)
plot(MTSI_index2)
MTSI_index2 <-
rawdata %>%
waasb(ENV, GEN, REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
mresp = c("h, l, h, l, l, l, h, h"),
wresp = 50) %>% # Default is 50
mtsi(SI = 25)
plot(MTSI_index2)
mod <- gamem(rawdata,
gen = GEN,
rep = REP,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD))
mgidi_index <- mgidi(mod,
SI = 20,
resp = c(Height, Lodging, Appereance, Oidio, Ascochyta, OcPl, BIOM, YIELD),
ideotype = c("h, l, h, l, l, l, h, h"))
mgidi_index <- mgidi(mod,
SI = 20,
ideotype = c("h, l, h, l, l, l, h, h"))
p1 <- plot(mgidi_index, SI = 20)
p2 <- plot(mgidi_index, type = "contribution")
arrange_ggplot(p1, p2)
#importar imagen
plate_1 <- image_import(("prueba_hoja.jpg"))
library(pliman)
library(EBImage)
library(dplyr)
#importar imagen
plate_1 <- image_import(("prueba_hoja.jpg"))
library(openxlsx)
library(data.table)
library(tidyverse)
library(ggstatsplot)
library(readxl)
library(hrbrthemes)
library(metan)
library(readxl)
Rust_controlled_condition <- read_excel("GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC", col_types = c("numeric",
"numeric", "text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "text", "text", "numeric",
"numeric", "numeric", "numeric"))
View(Rust_controlled_condition)
df_cc <- data.frame(Rust_controlled_condition)
gen_alpha_cc <- gamem(df_cc, GEN, REP, c(AUDPC,PL50,IF), block = BLOCK)
get_model_data(gen_alpha_cc)
gen_alpha_cc2 <- gamem(df_cc, GEN, REP, c(AUDPC,PL50,IF))
get_model_data(gen_alpha_cc2)
hist(gen_alpha_cc$AUDPC$BLUPgen$Predicted)
hist(df_cc$AUDPC)
hist(gen_alpha_cc$PL50$BLUPgen$Predicted)
hist(df_cc$PL50)
hist(gen_alpha_cc$IF$BLUPgen$Predicted)
hist(df_cc$IF)
library(openxlsx)
library(rrBLUP)
#Within-Environment (i.e., stratified) GBLUP (model fitting
library('BGLR')
Pheno_rust <- as.matrix(read.table(file = "BLUP_GS_rust.txt", header = T)) #load phenotypes
Pheno_rust<- mapply(Pheno_rust, FUN=as.numeric) #convert matrix to numeric
Pheno_rust <- matrix(data=Pheno_rust, ncol=15, nrow=320) # convert matrix to numeric 2
#traits:
R19 <- 3 # choose any number in 1:ncol(Pheno_rust)
AUDPC <- 5
IF <- 7
IT <- 8
DS <- 9
Index <- 14
G <- as.matrix(read.xlsx(xlsxFile = "GenPea_SilDArT_Kinship_rust.xlsx", sheet = "Sheet 3", colNames = F)) #G matrix
prefix <- paste(colnames(Pheno_rust)[R19],"_",sep="")
# Fitting the model
ETA <- list(G=list(K=G,model='RKHS'))
library(openxlsx)
library(rrBLUP)
#Within-Environment (i.e., stratified) GBLUP (model fitting
library('BGLR')
Pheno_rust <- as.matrix(read.table(file = "BLUP_GS_rust.txt", header = T)) #load phenotypes
setwd("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data")
Pheno_rust <- as.matrix(read.table(file = "BLUP_GS_rust.txt", header = T)) #load phenotypes
Pheno_rust<- mapply(Pheno_rust, FUN=as.numeric) #convert matrix to numeric
Pheno_rust <- matrix(data=Pheno_rust, ncol=15, nrow=320) # convert matrix to numeric 2
#traits:
R19 <- 3 # choose any number in 1:ncol(Pheno_rust)
AUDPC <- 5
IF <- 7
IT <- 8
DS <- 9
Index <- 14
G <- as.matrix(read.xlsx(xlsxFile = "GenPea_SilDArT_Kinship_rust.xlsx", sheet = "Sheet 3", colNames = F)) #G matrix
prefix <- paste(colnames(Pheno_rust)[R19],"_",sep="")
# Fitting the model
ETA <- list(G=list(K=G,model='RKHS'))
env <- R19 # choose any set of environments from 1:ncol(Y)
nEnv <- length(env)
Y <- Pheno_rust[,env]
n <- nrow(as.matrix(Y))
percTST<-0.1
nTST <- round(percTST*n)
rep = 10
mymat_R19 <- matrix(nrow = rep, ncol = 1)
prefix_R19 <- paste(colnames(Pheno_rust)[R19],"_",sep="")
for (i in 1:rep) {
tst<-sample(1:n,size=nTST,replace=FALSE)
YNA <- Y
YNA[tst]<-NA
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=1200,burnIn=200,saveAt=prefix_R19)
mymat_R19[i,] <- cor(Pheno_rust[tst,R19], fm_R19_CV1$yHat[tst])
env <- R19 # choose any set of environments from 1:ncol(Y)
nEnv <- length(env)
Y <- Pheno_rust[,env]
n <- nrow(as.matrix(Y))
percTST<-0.1
nTST <- round(percTST*n)
rep = 10
mymat_R19 <- matrix(nrow = rep, ncol = 1)
prefix_R19 <- paste(colnames(Pheno_rust)[R19],"_",sep="")
for (i in 1:rep) {
tst<-sample(1:n,size=nTST,replace=FALSE)
YNA <- Y
YNA[tst]<-NA
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=1200,burnIn=200,saveAt=prefix_R19)
mymat_R19[i,] <- cor(Pheno_rust[tst,R19], fm_R19_CV1$yHat[tst])
}
tst<-sample(1:n,size=nTST,replace=FALSE)
YNA <- Y
YNA[tst]<-NA
for (i in 1:rep) {
tst<-sample(1:n,size=nTST,replace=FALSE)
YNA <- Y
YNA[tst]<-NA
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=1200,burnIn=200,saveAt=prefix_R19)
mymat_R19[i,] <- cor(Pheno_rust[tst,R19], fm_R19_CV1$yHat[tst])
View(mymat_R19)
View(mymat_R19)
mymat_R19[i,] <- cor(Pheno_rust[tst,R19], fm_R19_CV1$yHat[tst])
env <- R19 # choose any set of environments from 1:ncol(Y)
nEnv <- length(env)
Y <- Pheno_rust[,env]
n <- nrow(as.matrix(Y))
percTST<-0.1
nTST <- round(percTST*n)
rep = 10
mymat_R19 <- matrix(nrow = rep, ncol = 1)
prefix_R19 <- paste(colnames(Pheno_rust)[R19],"_",sep="")
for (i in 1:rep) {
tst<-sample(1:n,size=nTST,replace=FALSE)
YNA <- Y
YNA[tst]<-NA
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=1200,burnIn=200,saveAt=prefix_R19)
mymat_R19[i,] <- cor(Pheno_rust[tst,R19], fm_R19_CV1$yHat[tst])
}
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=1200,burnIn=200,saveAt=prefix_R19)
fm_R19_CV1 <- BGLR(y=YNA,ETA=ETA,nIter=3200,burnIn=600,saveAt=prefix_R19)
