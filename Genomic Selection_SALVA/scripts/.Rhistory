filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_mat[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
View(my_matR1)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_array <- array(my_matR1, my_matR2, my_matR3)
my_array <- array(1:19, dim=c(19, 19, 3))
my_array
my_array <- array(NaN, dim=c(19, 19, 3))
my_array
Rows
Blocks
for (i in 1:length(Rows)) {
for (j in 1:length(Blocks)) {
for (k in 1:max(Reps)) {
if (Reps[k] == "1") {
my_array[i,j,k] = i*j*k
}
}
}
}
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
View(my_matR1)
View(my_matR2)
View(my_matR3)
RowsR2
RowsR1
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((RowsR2[i]+BlocksR2[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((RowsR3[i]+BlocksR3[j])/2)
}
}
my_matR3
my_array <- array(NaN, dim=c(19, 19, 3))
for (i in 1:length(Rows)) {
for (j in 1:length(Blocks)) {
for (k in 1:max(Reps)) {
if (Reps[k] == "1") {
my_array[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
}
}
knitr::opts_chunk$set(echo = TRUE)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
#matrixes for every rep:
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
my_matR1
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
RowsR1
BlocksR1
library(openxlsx)
library(data.table)
library(tidyverse)
library(ggstatsplot)
library(readxl)
library(hrbrthemes)
knitr::opts_chunk$set(echo = TRUE)
mean(R18$T_Germ
mean(R18$T_Germ)
R18$T_Germ
library(metan)
library(readxl)
library(tidyverse)
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"numeric", #REP
"numeric", #BLOCK
"text", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B1
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
max(R18$ROW)
max(R18$BLOCK)
R18$ROW
max(R18$ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=19, ncol=19)
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=19, ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
R18$ROW
max(R18$ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=19, ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
format(round(my_matR1, 2), nsmall = 2)
unlist(as.list(my_matR1))
#The matrixes for Rep 2 and Rep 3
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
library(metan)
library(readxl)
library(tidyverse)
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"numeric", #REP
"numeric", #BLOCK
"numeric", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1 <- matrix(nrow=(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
RowsR1
BlocksR1
(mean(R18$T_Germ))
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
format(round(my_matR1, 2), nsmall = 2) #show with two decimals
#The matrixes for Rep 2 and Rep 3
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR2 <- matrix(nrow=(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((RowsR2[i]+BlocksR2[j])/2)
}
}
#The matrixes for Rep 2 and Rep 3
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((RowsR2[i]+BlocksR2[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((RowsR3[i]+BlocksR3[j])/2)
}
}
rbind(my_matR1, my_matR2, my_matR3)
FCr1 <- unlist(as.list(my_matR1))
FCr1
rbind(FCr1, FCr2, FCr3)
FCr2 <- unlist(as.list(my_matR2))
FCr3 <- unlist(as.list(my_matR3))
rbind(FCr1, FCr2, FCr3)
rbind(FCr1, FCr2)
R18_t <- R18 %>%
mutate(GERM_t = (T_Germ * FC_GERM))
FCr1
cbind(FCr1, FCr2)
FCr1 <- unlist(as.data.frame(my_matR1))
FCr1
FCr2 <- unlist(as.data.frame(my_matR2))
rbind(FCr1, FCr2)
cbind(FCr1, FCr2)
bind_rows(FCr1, FCr2)
bind_cols(FCr1, FCr2)
FCr1
