group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=GERM_R1$T_Germ, ncol=GERM_B1$T_Germ)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
GERM_R1$T_Germ
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=R18$ROW, ncol=R18$BLOCK)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
R18$ROW
max(R18$ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
CF_Germ =  c()
for (i in foo) {
CF_Germ[i]
}
CF_Germ[i] = foo
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = foo
}
CF_Germ[i] = "foo"
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
CF_Germ =
for (i in 1:57) {
CF_Germ[i] = "foo"
}
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
cf1
cf1 <- CF_Germ =  c()
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_B1$T_Germ
GERM_R1$T_Germ
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_R$T_Germ
vector2 <- GERM_B$T_Germ
GERM_R$T_Germ
row.names <- c("R1","R2","R3","R4", "R5", "R6", "R7", "R8", "R9", "R10", "R11", "R12", "R13", "R14", "R15", "R16", "R17", "R18", "R19")
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
CF_Germ =  c()
cf1 <- CF_Germ =  c()
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
library(openxlsx)
library(data.table)
library(tidyverse)
library(ggstatsplot)
library(readxl)
library(hrbrthemes)
#Cargar datos de prueba
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"text", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
max(R18$ROW)
(R18$BLOCK)
max(R18$BLOCK)
(nrow=max(R18$ROW)
max(R18$ROW)
#Cargar datos de prueba
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"text", #REP
"numeric", #BLOCK
"numeric", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
View(mymat)
R18$ROW
GERM_R$T_Germ
#Tabla con las medias de los controles por ROW y REP
GERM_R <- R18 %>%
group_by(REP, ROW) %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
head(GERM_R)
#Tabla con las medias de los controles por BLOCK y REP
GERM_B <- R18 %>%
group_by(REP, BLOCK) %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
head(GERM_B)
GERM_R$T_Germ
GERM_B$T_Germ
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = vector1*vector2
}
}
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_R$T_Germ
vector2 <- GERM_B$T_Germ
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = vector1*vector2
}
}
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_R1$T_Germ
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_R1$T_Germ
vector2 <- GERM_B1$T_Germ
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- c(GERM_R1$T_Germ)
vector2 <- c(GERM_B1$T_Germ)
vector1
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = vector1*vector2
}
}
1:dim(mymat)[1]
1:dim(mymat)[2]
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
i <- c(GERM_R1$T_Germ)
j <- c(GERM_B1$T_Germ)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
View(mymat)
c(GERM_R1$T_Germ)
1:dim(mymat)[1]
i
j
i
c(GERM_R1$T_Germ)
mymat
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
Rows <- c(GERM_R1$T_Germ)
Blocks <- c(GERM_B1$T_Germ)
# Create your three-dimensional array
A=c(2,3,4,5);# In your case row terms
B=c(3,4,5,6);# In your case column terms
A
x= matrix(,nrow = length(A), ncol = length(B))
View(x)
for (i in 1:length(A)){
for (j in 1:length(B)){
x[i,j]<-(A[i]*B[j])# do the similarity function, simi(A[i],B[j])
}
}
x # matrix is filled
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(Rows)){
for (j in 1:length(Blocks)){
mymat[i,j]<-(Rows[i]*Blocks[j])# do the similarity function, simi(A[i],B[j])
}
}
mymat # matrix is filled
for (i in 1:length(Rows)){
for (j in 1:length(Blocks)){
mymat[i,j]<-(Rows[i]*Blocks[j])/(mean(R18$T_Germ))
}
}
mymat # matrix is filled
for (i in 1:length(Rows)){
for (j in 1:length(Blocks)){
mymat[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
mymat # matrix is filled
GERM_B1$T_Germ
=19*3
19*3
length(Rows)
Rows
Reps <- c(1, 2, 3)
Reps <- c(1:3)
GERM_B
GERM_B1
GERM_B <-
GERM_B
GERM_B <- R18 %>%
group_by(REP, BLOCK) %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
GERM_B
Reps <- c(GERM_B$REP)
length(Reps)
max(Reps)
length(Rows)
Rows <- c(GERM_R$T_Germ)
Blocks <- c(GERM_B$T_Germ)
Reps <- c(GERM_B$REP)
length(Rows)
max(Rows)
max(Blocks)
Blocks
dim(Rows)
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_mat[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
View(my_matR1)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_array <- array(my_matR1, my_matR2, my_matR3)
my_array <- array(1:19, dim=c(19, 19, 3))
my_array
my_array <- array(NaN, dim=c(19, 19, 3))
my_array
Rows
Blocks
for (i in 1:length(Rows)) {
for (j in 1:length(Blocks)) {
for (k in 1:max(Reps)) {
if (Reps[k] == "1") {
my_array[i,j,k] = i*j*k
}
}
}
}
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
RowsR2 <- c(GERM_R2$T_Germ)
BlocksR2 <- c(GERM_B2$T_Germ)
RowsR3 <- c(GERM_R3$T_Germ)
BlocksR3 <- c(GERM_B3$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
View(my_matR1)
View(my_matR2)
View(my_matR3)
RowsR2
RowsR1
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR2 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR2)){
for (j in 1:length(BlocksR2)){
my_matR2[i,j]<-(mean(R18$T_Germ))/((RowsR2[i]+BlocksR2[j])/2)
}
}
my_matR3 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR3)){
for (j in 1:length(BlocksR3)){
my_matR3[i,j]<-(mean(R18$T_Germ))/((RowsR3[i]+BlocksR3[j])/2)
}
}
my_matR3
my_array <- array(NaN, dim=c(19, 19, 3))
for (i in 1:length(Rows)) {
for (j in 1:length(Blocks)) {
for (k in 1:max(Reps)) {
if (Reps[k] == "1") {
my_array[i,j]<-(mean(R18$T_Germ))/((Rows[i]+Blocks[j])/2)
}
}
}
}
knitr::opts_chunk$set(echo = TRUE)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B2 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B3 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R2 <- R18 %>%
group_by(ROW) %>%
filter(REP == "2") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R3 <- R18 %>%
group_by(ROW) %>%
filter(REP == "3") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
#vector for every rep:
RowsR1 <- c(GERM_R1$T_Germ)
BlocksR1 <- c(GERM_B1$T_Germ)
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
#matrixes for every rep:
my_matR1 <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
my_matR1
for (i in 1:length(RowsR1)){
for (j in 1:length(BlocksR1)){
my_matR1[i,j]<-(mean(R18$T_Germ))/((RowsR1[i]+BlocksR1[j])/2)
}
}
my_matR1
RowsR1
BlocksR1
