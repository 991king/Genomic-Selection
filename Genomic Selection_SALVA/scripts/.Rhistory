"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
#Load data frame:
head(R18)
gen_alpha <-
gamem(R18, #data
GEN, #genotype
REP, #replicate
c("T_Rust", "Asco", "Oidio"), # diseases trait
block = BLOCK) #block
#plot(gen_alpha, type = "re")
get_model_data(gen_alpha)
#Grafico que visualiza si hay diferencias significativas entre réplicas para los controles
R18 %>%
filter(GEN == "Control") %>%
ggbetweenstats(
x     = REP,
y     = T_Germ,
title = "Distribution of Germination across Replicates in the Controls"
)
ary(ggstatsplot)
library(ggstatsplot)
#Grafico que visualiza si hay diferencias significativas entre réplicas para los controles
R18 %>%
filter(GEN == "Control") %>%
ggbetweenstats(
x     = REP,
y     = T_Germ,
title = "Distribution of Germination across Replicates in the Controls"
)
#Grafico que visualiza si hay diferencias significativas entre réplicas para los controles
R18 %>%
filter(GEN == "Control") %>%
ggbetweenstats(
x     = REP,
y     = T_Rust,
title = "Distribution of Germination across Replicates in the Controls"
)
#Tabla con las medias de los controles por ROW y REP
GERM_R <- R18 %>%
group_by(REP, ROW) %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
GERM_R
View(GERM_R)
#Tabla con las medias de los controles por BLOCK y REP
GERM_B <- R18 %>%
group_by(REP, BLOCK) %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
GERM_B
#Lista con el Factor de Corrección para cada R(i) y B(j)
as_tibble (FC_GERM <- c(
col1 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[1])+GERM_B$T_Germ[1:19])/2), #REP1
col2 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[2])+GERM_B$T_Germ[1:19])/2), #REP1
col3 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[3])+GERM_B$T_Germ[1:19])/2), #REP1
col4 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[4])+GERM_B$T_Germ[1:19])/2), #REP1
col5 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[5])+GERM_B$T_Germ[1:19])/2), #REP1
col6 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[6])+GERM_B$T_Germ[1:19])/2), #REP1
col7 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[7])+GERM_B$T_Germ[1:19])/2), #REP1
col8 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[8])+GERM_B$T_Germ[1:19])/2), #REP1
col9 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[9])+GERM_B$T_Germ[1:19])/2), #REP1
col10 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[10])+GERM_B$T_Germ[1:19])/2), #REP1
col11 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[11])+GERM_B$T_Germ[1:19])/2), #REP1
col12 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[12])+GERM_B$T_Germ[1:19])/2), #REP1
col13 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[13])+GERM_B$T_Germ[1:19])/2), #REP1
col14 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[14])+GERM_B$T_Germ[1:19])/2), #REP1
col15 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[15])+GERM_B$T_Germ[1:19])/2), #REP1
col16 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[16])+GERM_B$T_Germ[1:19])/2), #REP1
col17 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[17])+GERM_B$T_Germ[1:19])/2), #REP1
col18 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[18])+GERM_B$T_Germ[1:19])/2), #REP1
col19 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[19])+GERM_B$T_Germ[1:19])/2), #REP1
col20 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[20])+GERM_B$T_Germ[20:38])/2), #REP2
col21 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[21])+GERM_B$T_Germ[20:38])/2), #REP2
col22 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[22])+GERM_B$T_Germ[20:38])/2), #REP2
col23 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[23])+GERM_B$T_Germ[20:38])/2), #REP2
col24 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[24])+GERM_B$T_Germ[20:38])/2), #REP2
col25 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[25])+GERM_B$T_Germ[20:38])/2), #REP2
col26 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[26])+GERM_B$T_Germ[20:38])/2), #REP2
col27 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[27])+GERM_B$T_Germ[20:38])/2), #REP2
col28 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[28])+GERM_B$T_Germ[20:38])/2), #REP2
col29 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[29])+GERM_B$T_Germ[20:38])/2), #REP2
col30 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[30])+GERM_B$T_Germ[20:38])/2), #REP2
col31 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[31])+GERM_B$T_Germ[20:38])/2), #REP2
col32 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[32])+GERM_B$T_Germ[20:38])/2), #REP2
col33 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[33])+GERM_B$T_Germ[20:38])/2), #REP2
col34 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[34])+GERM_B$T_Germ[20:38])/2), #REP2
col35 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[35])+GERM_B$T_Germ[20:38])/2), #REP2
col36 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[36])+GERM_B$T_Germ[20:38])/2), #REP2
col37 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[37])+GERM_B$T_Germ[20:38])/2), #REP2
col38 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[38])+GERM_B$T_Germ[20:38])/2), #REP2
col39 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[39])+GERM_B$T_Germ[39:57])/2), #REP3
col40 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[40])+GERM_B$T_Germ[39:57])/2), #REP3
col41 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[41])+GERM_B$T_Germ[39:57])/2), #REP3
col42 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[42])+GERM_B$T_Germ[39:57])/2), #REP3
col43 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[43])+GERM_B$T_Germ[39:57])/2), #REP3
col44 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[44])+GERM_B$T_Germ[39:57])/2), #REP3
col45 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[45])+GERM_B$T_Germ[39:57])/2), #REP3
col46 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[46])+GERM_B$T_Germ[39:57])/2), #REP3
col47 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[47])+GERM_B$T_Germ[39:57])/2), #REP3
col48 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[48])+GERM_B$T_Germ[39:57])/2), #REP3
col49 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[49])+GERM_B$T_Germ[39:57])/2), #REP3
col50 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[50])+GERM_B$T_Germ[39:57])/2), #REP3
col51 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[51])+GERM_B$T_Germ[39:57])/2), #REP3
col52 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[52])+GERM_B$T_Germ[39:57])/2), #REP3
col53 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[53])+GERM_B$T_Germ[39:57])/2), #REP3
col54 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[54])+GERM_B$T_Germ[39:57])/2), #REP3
col55 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[55])+GERM_B$T_Germ[39:57])/2), #REP3
col56 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[56])+GERM_B$T_Germ[39:57])/2), #REP3
col57 <- mean(R18$T_Germ)/(((GERM_R$T_Germ[57])+GERM_B$T_Germ[39:57])/2) #REP3
)
)
cbind(R18, FC_GERM)
R18_t <- R18 %>%
mutate(GERM_t = (T_Germ * FC_GERM))
(GERM_R$T_Germ[1])+GERM_B$T_Germ[1:19])
GERM_R$T_Germ[1]+GERM_B$T_Germ[1:19]
FC_GERM
names(FC_GERM)
mean(R18$T_Germ)
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
p <- df %>%
filter(GEN == "Control") %>%
ggbetweenstats(
x     = REP,
y     = trait,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18)
F1(R18, T_Germ)
df$trait
T_Germ
T_Germ
?filter
?ggbetweenstats
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
p <- df %>%
filter(GEN == "Control") %>%
ggbetweenstats(
x     = REP,
y     = .(trait),
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggbetweenstats(
data = df_small,
x     = REP,
y     = trait,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggbetweenstats(
data = df_small,
x     = REP,
y     = .(trait),
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggbetweenstats(
data = df_small,
x     = REP,
y     = .trait,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggplot(
data = df_small,
x     = REP,
y     = .trait,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggplot(
data = df_small, aes_string(x     = REP,
y     = .trait)
,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
p <- ggplot(
data = df_small, aes(x     = REP,
y     = .trait)
,
title = "Distribution of Germination across Replicates in the Controls"
)
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggplot(
data = df_small, aes(x     = REP,
y     = .trait)
,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggplot(
data = df_small, aes_string(x     = .REP,
y     = .trait)
,
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
p <- ggbetweenstats(
data = df_small,
x     = REP,
y     = {{trait}},
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
%>% ggbetweenstats(
x     = REP,
y     = {{trait}},
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
df_small <- df %>% filter(GEN == "Control")
%>% ggbetweenstats(
x     = REP,
y     = {{trait}},
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
##Intentar hacer una función que haga solo esto:
F1 <- function(df, trait) {
p <- df %>% filter(GEN == "Control") %>% ggbetweenstats(
x     = REP,
y     = {{trait}},
title = "Distribution of Germination across Replicates in the Controls"
)
return(p)
}
F1(R18, "T_Germ")
F1(R18, "Asco")
CF_Germ = c()
CF_Germ = c()
CF_Germ <-  c()
CF_Germ[i] = ...
CF_Germ[i]
for (i in 1:57) {
CF_Germ[i]
}
CF_Germ[i] = ...
CF_Germ[i]
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i]
}
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=19, ncol=19)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
View(mymat)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
# Create your three-dimensional array
my_array <- array(1:19, dim=c(19, 19, 3))
for (i in 1:dim(my_array)[1]) {
for (j in 1:dim(my_array)[2]) {
for (k in 1:dim(my_array)[3]) {
my_array[i,j,k] = i*j*k
}
}
}
# Create your three-dimensional array
my_array <- array(1:19, dim=c(19, 19, 3))
for (i in 1:dim(my_array)[1]) {
for (j in 1:dim(my_array)[2]) {
for (k in 1:dim(my_array)[3]) {
my_array[i,j,k] = i*j*k
}
}
}
my_array
my_array
view(my_array)
mymat <- matrix(nrow=19, ncol=19)
# For each row and for each column, assign values based on position: product of two indexes
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ))
GERM_B1
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B1
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(desc(BLOCK))
GERM_B1
#Cargar datos de prueba
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"text", #REP
"numeric", #BLOCK
"text", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(desc(BLOCK))
GERM_B1
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
GERM_B1
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_R1
#Cargar datos de prueba
R18 <- read_excel("~/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/Ensayocampo2018.xlsx", sheet = "RawData", col_types =
c("text", #ENV
"text", #REP
"numeric", #BLOCK
"numeric", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #BIOM
"numeric", #BIOM_PL
"numeric", #YIELD
"numeric", #YIELD_PL
"numeric", #BIOM/YIELD
"numeric", #Rust in %
"numeric", #Dtf
"numeric", #DtFP
"numeric", #DtP
"numeric", #Ascochyta in %
"numeric"  #Oidio in %
))
GERM_R1 <- R18 %>%
group_by(ROW) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(ROW)
GERM_B1 <- R18 %>%
group_by(BLOCK) %>%
filter(REP == "1") %>%
filter(GEN == "Control") %>%
summarise(T_Germ = mean(T_Germ)) %>%
arrange(BLOCK)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=GERM_R1$T_Germ, ncol=GERM_B1$T_Germ)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
GERM_R1$T_Germ
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=R18$ROW, ncol=R18$BLOCK)
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
R18$ROW
max(R18$ROW)
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
mymat <- matrix(nrow=max(R18$ROW), ncol=max(R18$BLOCK))
for(i in 1:dim(mymat)[1]) {
for(j in 1:dim(mymat)[2]) {
mymat[i,j] = i*j
}
}
view(mymat)
CF_Germ =  c()
for (i in foo) {
CF_Germ[i]
}
CF_Germ[i] = foo
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = foo
}
CF_Germ[i] = "foo"
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
CF_Germ =
for (i in 1:57) {
CF_Germ[i] = "foo"
}
CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
for (i in 1:57) {
CF_Germ[i] = "foo"
}
cf1 <- CF_Germ =  c()
cf1
cf1 <- CF_Germ =  c()
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_B1$T_Germ
GERM_R1$T_Germ
# Create a 19 x 19 matrix (of 19 rows and 19 blocks)
vector1 <- GERM_R$T_Germ
vector2 <- GERM_B$T_Germ
GERM_R$T_Germ
row.names <- c("R1","R2","R3","R4", "R5", "R6", "R7", "R8", "R9", "R10", "R11", "R12", "R13", "R14", "R15", "R16", "R17", "R18", "R19")
